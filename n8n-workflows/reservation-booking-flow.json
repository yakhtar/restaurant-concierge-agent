{
  "name": "Reservation Booking Flow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "reservation-booking",
        "options": {}
      },
      "id": "booking-webhook",
      "name": "Booking Request Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// Extract and validate booking parameters\nconst requestBody = $input.all()[0].json.body;\n\nconst bookingParams = {\n  restaurantId: requestBody.restaurantId || '',\n  customerId: requestBody.customerId || '',\n  partySize: requestBody.partySize || 2,\n  date: requestBody.date || '',\n  time: requestBody.time || '',\n  customerName: requestBody.customerName || '',\n  customerPhone: requestBody.customerPhone || '',\n  customerEmail: requestBody.customerEmail || '',\n  specialRequests: requestBody.specialRequests || '',\n  dietaryRestrictions: requestBody.dietaryRestrictions || [],\n  requestId: Date.now().toString()\n};\n\n// Validate required fields\nconst requiredFields = ['restaurantId', 'customerId', 'partySize', 'date', 'time', 'customerName', 'customerPhone'];\nconst missingFields = requiredFields.filter(field => !bookingParams[field]);\n\nif (missingFields.length > 0) {\n  throw new Error(`Missing required fields: ${missingFields.join(', ')}`);\n}\n\n// Validate date format (YYYY-MM-DD)\nif (!/^\\d{4}-\\d{2}-\\d{2}$/.test(bookingParams.date)) {\n  throw new Error('Date must be in YYYY-MM-DD format');\n}\n\n// Validate time format (HH:MM)\nif (!/^\\d{2}:\\d{2}$/.test(bookingParams.time)) {\n  throw new Error('Time must be in HH:MM format');\n}\n\n// Validate party size\nif (bookingParams.partySize < 1 || bookingParams.partySize > 20) {\n  throw new Error('Party size must be between 1 and 20');\n}\n\nreturn [{ json: { bookingParams } }];"
      },
      "id": "validate-booking-params",
      "name": "Validate Booking Parameters",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/mcp/customer-preferences/get",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "={{ $json.bookingParams.customerId }}"
            }
          ]
        },
        "options": {
          "timeout": 10000
        }
      },
      "id": "get-customer-prefs",
      "name": "Get Customer Preferences",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 300],
      "credentials": {
        "httpHeaderAuth": {
          "id": "mcp-api-auth",
          "name": "MCP API Auth"
        }
      }
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/mcp/opentable/availability",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "restaurantId",
              "value": "={{ $('Validate Booking Parameters').item.json.bookingParams.restaurantId }}"
            },\n            {\n              \"name\": \"partySize\",\n              \"value\": \"={{ $('Validate Booking Parameters').item.json.bookingParams.partySize }}\"\n            },\n            {\n              \"name\": \"date\",\n              \"value\": \"={{ $('Validate Booking Parameters').item.json.bookingParams.date }}\"\n            },\n            {\n              \"name\": \"time\",\n              \"value\": \"={{ $('Validate Booking Parameters').item.json.bookingParams.time }}\"\n            }\n          ]\n        },\n        \"options\": {\n          \"timeout\": 15000\n        }\n      },\n      \"id\": \"check-availability\",\n      \"name\": \"Check Availability\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.1,\n      \"position\": [900, 300],\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"mcp-api-auth\",\n          \"name\": \"MCP API Auth\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\"\n          },\n          \"conditions\": [\n            {\n              \"id\": \"availability-check\",\n              \"leftValue\": \"={{ $json.availabilities?.length > 0 }}\",\n              \"rightValue\": true,\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\"\n              }\n            }\n          ],\n          \"combinator\": \"and\"\n        },\n        \"options\": {}\n      },\n      \"id\": \"availability-check\",\n      \"name\": \"Availability Found?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2,\n      \"position\": [1120, 300]\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Find the best available time slot\\nconst availabilityData = $input.all()[0].json;\\nconst bookingParams = $('Validate Booking Parameters').item.json.bookingParams;\\n\\nconst availabilities = availabilityData.availabilities || [];\\nconst requestedTime = bookingParams.time;\\n\\n// Find exact match or closest time\\nlet bestSlot = null;\\nlet minTimeDiff = Infinity;\\n\\nfor (const slot of availabilities) {\\n  if (!slot.available) continue;\\n  \\n  const slotTime = slot.time;\\n  const timeDiff = Math.abs(\\n    convertTimeToMinutes(slotTime) - convertTimeToMinutes(requestedTime)\\n  );\\n  \\n  if (timeDiff < minTimeDiff) {\\n    minTimeDiff = timeDiff;\\n    bestSlot = slot;\\n  }\\n}\\n\\nfunction convertTimeToMinutes(timeStr) {\\n  const [hours, minutes] = timeStr.split(':').map(Number);\\n  return hours * 60 + minutes;\\n}\\n\\nif (!bestSlot) {\\n  throw new Error('No suitable time slot found');\\n}\\n\\nreturn [{ json: {\\n  bookingParams: {\\n    ...bookingParams,\\n    confirmedTime: bestSlot.time,\\n    duration: bestSlot.duration || 120,\\n    tableType: bestSlot.tableType,\\n    price: bestSlot.price\\n  },\\n  selectedSlot: bestSlot\\n}}];\"\n      },\n      \"id\": \"select-time-slot\",\n      \"name\": \"Select Best Time Slot\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [1340, 180]\n    },\n    {\n      \"parameters\": {\n        \"url\": \"http://localhost:3000/api/mcp/opentable/book\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        },\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"restaurantId\",\n              \"value\": \"={{ $json.bookingParams.restaurantId }}\"\n            },\n            {\n              \"name\": \"partySize\",\n              \"value\": \"={{ $json.bookingParams.partySize }}\"\n            },\n            {\n              \"name\": \"date\",\n              \"value\": \"={{ $json.bookingParams.date }}\"\n            },\n            {\n              \"name\": \"time\",\n              \"value\": \"={{ $json.bookingParams.confirmedTime }}\"\n            },\n            {\n              \"name\": \"customerName\",\n              \"value\": \"={{ $json.bookingParams.customerName }}\"\n            },\n            {\n              \"name\": \"customerPhone\",\n              \"value\": \"={{ $json.bookingParams.customerPhone }}\"\n            },\n            {\n              \"name\": \"customerEmail\",\n              \"value\": \"={{ $json.bookingParams.customerEmail }}\"\n            },\n            {\n              \"name\": \"specialRequests\",\n              \"value\": \"={{ $json.bookingParams.specialRequests }}\"\n            }\n          ]\n        },\n        \"options\": {\n          \"timeout\": 30000\n        }\n      },\n      \"id\": \"book-reservation\",\n      \"name\": \"Book Reservation\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.1,\n      \"position\": [1560, 180],\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"mcp-api-auth\",\n          \"name\": \"MCP API Auth\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\"\n          },\n          \"conditions\": [\n            {\n              \"id\": \"booking-success\",\n              \"leftValue\": \"={{ $json.success }}\",\n              \"rightValue\": true,\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\"\n              }\n            }\n          ],\n          \"combinator\": \"and\"\n        },\n        \"options\": {}\n      },\n      \"id\": \"booking-success-check\",\n      \"name\": \"Booking Successful?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2,\n      \"position\": [1780, 180]\n    },\n    {\n      \"parameters\": {\n        \"url\": \"http://localhost:3000/api/mcp/customer-preferences/add-reservation\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        },\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"userId\",\n              \"value\": \"={{ $('Select Best Time Slot').item.json.bookingParams.customerId }}\"\n            },\n            {\n              \"name\": \"restaurantId\",\n              \"value\": \"={{ $('Select Best Time Slot').item.json.bookingParams.restaurantId }}\"\n            },\n            {\n              \"name\": \"restaurantName\",\n              \"value\": \"{{ $json.reservation.restaurantName || 'Restaurant' }}\"\n            },\n            {\n              \"name\": \"reservationDate\",\n              \"value\": \"={{ $('Select Best Time Slot').item.json.bookingParams.date }}\"\n            },\n            {\n              \"name\": \"partySize\",\n              \"value\": \"={{ $('Select Best Time Slot').item.json.bookingParams.partySize }}\"\n            },\n            {\n              \"name\": \"status\",\n              \"value\": \"={{ $json.reservation.status }}\"\n            }\n          ]\n        },\n        \"options\": {\n          \"timeout\": 10000\n        }\n      },\n      \"id\": \"save-reservation-history\",\n      \"name\": \"Save Reservation History\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.1,\n      \"position\": [2000, 60],\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"mcp-api-auth\",\n          \"name\": \"MCP API Auth\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"url\": \"http://localhost:3000/api/whatsapp/send-confirmation\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        },\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"to\",\n              \"value\": \"={{ $('Select Best Time Slot').item.json.bookingParams.customerPhone }}\"\n            },\n            {\n              \"name\": \"reservationDetails\",\n              \"value\": \"={{ $json.reservation }}\"\n            },\n            {\n              \"name\": \"bookingParams\",\n              \"value\": \"={{ $('Select Best Time Slot').item.json.bookingParams }}\"\n            }\n          ]\n        },\n        \"options\": {\n          \"timeout\": 15000\n        }\n      },\n      \"id\": \"send-whatsapp-confirmation\",\n      \"name\": \"Send WhatsApp Confirmation\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.1,\n      \"position\": [2000, 180],\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"whatsapp-api-auth\",\n          \"name\": \"WhatsApp API Auth\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"mode\": \"chooseBranch\",\n        \"output\": \"input2\"\n      },\n      \"id\": \"merge-success-responses\",\n      \"name\": \"Merge Success Responses\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"typeVersion\": 3,\n      \"position\": [2220, 120]\n    },\n    {\n      \"parameters\": {\n        \"respondWith\": \"json\",\n        \"responseBody\": \"{\\n  \\\"success\\\": true,\\n  \\\"reservation\\\": {{ $('Book Reservation').item.json.reservation }},\\n  \\\"message\\\": \\\"Reservation confirmed successfully!\\\",\\n  \\\"requestId\\\": \\\"{{ $('Select Best Time Slot').item.json.bookingParams.requestId }}\\\",\\n  \\\"confirmationSent\\\": {{ $json.success || false }}\\n}\"\n      },\n      \"id\": \"success-response\",\n      \"name\": \"Success Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"typeVersion\": 1,\n      \"position\": [2440, 120]\n    },\n    {\n      \"parameters\": {\n        \"respondWith\": \"json\",\n        \"responseBody\": \"{\\n  \\\"success\\\": false,\\n  \\\"error\\\": \\\"No availability found for the requested time\\\",\\n  \\\"message\\\": \\\"Please try a different time or date\\\",\\n  \\\"availableTimes\\\": {{ $('Check Availability').item.json.availabilities || [] }},\\n  \\\"requestId\\\": \\\"{{ $('Validate Booking Parameters').item.json.bookingParams.requestId }}\\\"\\n}\",\n        \"responseCode\": 400\n      },\n      \"id\": \"no-availability-response\",\n      \"name\": \"No Availability Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"typeVersion\": 1,\n      \"position\": [1340, 420]\n    },\n    {\n      \"parameters\": {\n        \"respondWith\": \"json\",\n        \"responseBody\": \"{\\n  \\\"success\\\": false,\\n  \\\"error\\\": \\\"Booking failed\\\",\\n  \\\"message\\\": \\\"{{ $('Book Reservation').item.json.error || 'Unable to complete reservation' }}\\\",\\n  \\\"requestId\\\": \\\"{{ $('Select Best Time Slot').item.json.bookingParams.requestId }}\\\"\\n}\",\n        \"responseCode\": 500\n      },\n      \"id\": \"booking-failed-response\",\n      \"name\": \"Booking Failed Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"typeVersion\": 1,\n      \"position\": [2000, 300]\n    },\n    {\n      \"parameters\": {\n        \"respondWith\": \"json\",\n        \"responseBody\": \"{\\n  \\\"success\\\": false,\\n  \\\"error\\\": \\\"{{ $json.error?.message || 'Validation failed' }}\\\",\\n  \\\"requestId\\\": \\\"{{ $('Validate Booking Parameters').item.json.bookingParams.requestId || 'unknown' }}\\\"\\n}\",\n        \"responseCode\": 400\n      },\n      \"id\": \"validation-error-response\",\n      \"name\": \"Validation Error Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"typeVersion\": 1,\n      \"position\": [460, 500]\n    },\n    {\n      \"parameters\": {\n        \"resource\": \"log\",\n        \"operation\": \"write\",\n        \"level\": \"error\",\n        \"message\": \"Booking workflow error: {{ $json.error?.message }}\",\n        \"additionalFields\": {\n          \"metadata\": {\n            \"requestId\": \"={{ $('Validate Booking Parameters').item.json.bookingParams.requestId }}\",\n            \"step\": \"validation\",\n            \"bookingParams\": \"={{ $('Validate Booking Parameters').item.json.bookingParams }}\"\n          }\n        }\n      },\n      \"id\": \"log-validation-error\",\n      \"name\": \"Log Validation Error\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"typeVersion\": 1,\n      \"position\": [680, 500]\n    },\n    {\n      \"parameters\": {\n        \"resource\": \"log\",\n        \"operation\": \"write\",\n        \"level\": \"info\",\n        \"message\": \"Reservation confirmed: {{ $('Book Reservation').item.json.reservation.id }}\",\n        \"additionalFields\": {\n          \"metadata\": {\n            \"reservationId\": \"={{ $('Book Reservation').item.json.reservation.id }}\",\n            \"customerId\": \"={{ $('Select Best Time Slot').item.json.bookingParams.customerId }}\",\n            \"restaurantId\": \"={{ $('Select Best Time Slot').item.json.bookingParams.restaurantId }}\",\n            \"confirmationCode\": \"={{ $('Book Reservation').item.json.reservation.confirmationCode }}\"\n          }\n        }\n      },\n      \"id\": \"log-success\",\n      \"name\": \"Log Success\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"typeVersion\": 1,\n      \"position\": [2220, 300]\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Booking Request Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Validate Booking Parameters\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Validate Booking Parameters\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Customer Preferences\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Customer Preferences\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check Availability\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check Availability\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Availability Found?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Availability Found?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Select Best Time Slot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"No Availability Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Select Best Time Slot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Book Reservation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Book Reservation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Booking Successful?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Booking Successful?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Save Reservation History\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Send WhatsApp Confirmation\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Log Success\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Booking Failed Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Save Reservation History\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Success Responses\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send WhatsApp Confirmation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Success Responses\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Merge Success Responses\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  },\n  \"active\": true,\n  \"settings\": {\n    \"executionOrder\": \"v1\",\n    \"saveManualExecutions\": true,\n    \"callerPolicy\": \"workflowsFromSameOwner\"\n  },\n  \"versionId\": \"1\",\n  \"meta\": {\n    \"templateCredsSetupCompleted\": true,\n    \"instanceId\": \"restaurant-concierge-n8n\"\n  },\n  \"id\": \"reservation-booking-flow\",\n  \"tags\": [\n    {\n      \"createdAt\": \"2024-01-01T00:00:00.000Z\",\n      \"updatedAt\": \"2024-01-01T00:00:00.000Z\",\n      \"id\": \"reservation\",\n      \"name\": \"Reservation\"\n    },\n    {\n      \"createdAt\": \"2024-01-01T00:00:00.000Z\",\n      \"updatedAt\": \"2024-01-01T00:00:00.000Z\",\n      \"id\": \"booking\",\n      \"name\": \"Booking\"\n    }\n  ]\n}\n"
      },\n      \"id\": \"validate-booking-params\",\n      \"name\": \"Validate Booking Parameters\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [460, 300]\n    },"