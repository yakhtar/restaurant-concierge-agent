{
  "name": "Restaurant Concierge - WhatsApp Handler",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp-webhook",
        "options": {}
      },
      "id": "webhook-whatsapp",
      "name": "WhatsApp Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "webhook-verification",
              "leftValue": "={{ $json.query['hub.mode'] }}",
              "rightValue": "subscribe",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "webhook-verification-check",
      "name": "Webhook Verification?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.query['hub.challenge'] }}"
      },
      "id": "verification-response",
      "name": "Verification Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [680, 180]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "has-message",
              "leftValue": "={{ $json.body.entry?.[0]?.changes?.[0]?.value?.messages?.length > 0 }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "true"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "has-message-check",
      "name": "Has Message?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 420]
    },
    {
      "parameters": {
        "jsCode": "// Extract message data from WhatsApp webhook\nconst entry = $input.all()[0].json.body.entry?.[0];\nconst change = entry?.changes?.[0];\nconst message = change?.value?.messages?.[0];\nconst contact = change?.value?.contacts?.[0];\n\nif (!message) {\n  return [];\n}\n\n// Extract message details\nconst messageData = {\n  id: message.id,\n  from: message.from,\n  to: change.value.metadata.phone_number_id,\n  timestamp: message.timestamp,\n  type: message.type,\n  \n  // Contact info\n  contact_name: contact?.profile?.name || '',\n  \n  // Message content based on type\n  text_body: message.text?.body || null,\n  \n  // Location data\n  location: message.location ? {\n    latitude: message.location.latitude,\n    longitude: message.location.longitude,\n    name: message.location.name,\n    address: message.location.address\n  } : null,\n  \n  // Interactive message responses\n  interactive: message.interactive ? {\n    type: message.interactive.type,\n    button_reply: message.interactive.button_reply,\n    list_reply: message.interactive.list_reply\n  } : null,\n  \n  // Media\n  image: message.image || null,\n  audio: message.audio || null,\n  document: message.document || null\n};\n\nreturn [{ json: messageData }];"
      },
      "id": "extract-message",
      "name": "Extract Message Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/concierge/message",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "id": "send-to-concierge",
      "name": "Send to Concierge Agent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 300],
      "credentials": {
        "httpHeaderAuth": {
          "id": "concierge-api-auth",
          "name": "Concierge API Auth"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "success-status",
              "leftValue": "={{ $json.statusCode }}",
              "rightValue": 200,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-concierge-response",
      "name": "Concierge Success?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "OK"
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1560, 180]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "Error processing message",
        "responseCode": 500
      },
      "id": "error-response",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1560, 420]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "No message to process"
      },
      "id": "no-message-response",
      "name": "No Message Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 540]
    },
    {
      "parameters": {
        "resource": "log",
        "operation": "write",
        "level": "error",
        "message": "Failed to process WhatsApp message: {{ $json.error }}",
        "additionalFields": {
          "metadata": {
            "messageId": "={{ $('Extract Message Data').item.json.id }}",
            "from": "={{ $('Extract Message Data').item.json.from }}",
            "timestamp": "={{ $('Extract Message Data').item.json.timestamp }}"
          }
        }
      },
      "id": "error-logging",
      "name": "Log Error",
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [1340, 540]
    }
  ],
  "pinData": {},
  "connections": {
    "WhatsApp Webhook": {
      "main": [
        [
          {
            "node": "Webhook Verification?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Verification?": {
      "main": [
        [
          {
            "node": "Verification Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Has Message?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Message?": {
      "main": [
        [
          {
            "node": "Extract Message Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Message Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Message Data": {
      "main": [
        [
          {
            "node": "Send to Concierge Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Concierge Agent": {
      "main": [
        [
          {
            "node": "Concierge Success?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Concierge Success?": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "restaurant-concierge-n8n"
  },
  "id": "whatsapp-handler",
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "whatsapp",
      "name": "WhatsApp"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z", 
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "restaurant",
      "name": "Restaurant"
    }
  ]
}